<?xml version="1.0" encoding="windows-1251"?>
<SynUniHighlighter Version="2.0">
	<SyntaxColoring>
		<Info>
			<General Name="Delphi" Extensions="DPK PAS DPR ~PAS ~DPR" Version="1" Revision="3" Sample="string = [''];
unit UUniEdit;
  ESynEditError = class(Exception);
  TForm1 = class(TForm)//My class name
{$R *.dfm}
begin
  try
   do
  except
   break;
  end;
end;

if SynUniSyn&lt;&gt;nil then SynUniSyn.RunDesigner else Showmessage('Please, choose highlighter');
end;{  SynUniSyn:=TSynUniSyn.create(nil);}
  case (*VersionType.ItemIndex of
    0: SynUniSyn*).Info.Version.VersionType:=vtInternalTest;
    1: @SynUniSyn.Info.Version.VersionType:=vtBeta;
a:=['{9BFA382E-0D79-47F5-8246-E431E899CD62}']+$23-13;
asm
  mov ax,bx   //hjk
  string
end;" History=""/>
			<Author Name="Vitalik" Mail="v-e-t-a-l@ukr.net; vetal-x@mail.ru" Web="" Copyright="(c) Vitaly Lyapota, 2004" Company="N/A" Remark="Based on Vitaly Nevzorov highlighter"/>
		</Info>
		<Schemes/>
		<Editor/>
		<MainRules Name="SyntaxColoring" Style="Root">
			<Attributes Foreground="clNone" Background="$80000005"/>
			<Delimiters Value="!&quot;#$%&amp;'()*+,-./:;&lt;=&gt;?@[\]^`{|}~"/>
			<SubRules>
				<Range Name="Remarks {...}" Style="Remarks {...}">
					<Attributes Foreground="clGreen" Background="$80000005" ParentBackground="True" Style="I"/>
					<Delimiters Value="!&quot;#$%&amp;'()*+,-./:;&lt;=&gt;?@[\]^`{|}~"/>
					<OpenToken StartLine="" PartOfTerm="Right"/>
					<CloseToken StartLine="" PartOfTerm="Right"/>
					<Properties/>
					<MultiTokens>
						<Tokens Open="{" Close="}"/>
					</MultiTokens>
					<SubRules>
						<Set Name="Numbers" Enabled="True" Style="" Symbols="0123456789" Quantity="0">
							<Attributes Foreground="clGreen" Background="$80000005" ParentForeground="True" ParentBackground="True" Style="I"/>
						</Set>
					</SubRules>
				</Range>
				<Range Name="Remarks (*...*)" Style="">
					<Attributes Foreground="clGreen" Background="$80000005" ParentBackground="True" Style="I"/>
					<Delimiters Value="!&quot;#$%&amp;'()*+,-./:;&lt;=&gt;?@[\]^`{|}~"/>
					<OpenToken StartLine="" PartOfTerm="Right"/>
					<CloseToken StartLine="" PartOfTerm="Right"/>
					<Properties/>
					<MultiTokens>
						<Tokens Open="(*" Close="*)"/>
					</MultiTokens>
					<SubRules/>
				</Range>
				<Range Name="Remarks //" CaseSensitive="True" Style="Remarks //">
					<Attributes Foreground="clGreen" Background="$80000005" ParentBackground="True" Style="I"/>
					<Delimiters Value="!&quot;#$%&amp;'()*+,-./:;&lt;=&gt;?@[\]^`{|}~"/>
					<OpenToken StartLine="" PartOfTerm="Right"/>
					<CloseToken StartLine="" PartOfTerm="False"/>
					<Properties CloseOnEol="True"/>
					<MultiTokens>
						<Tokens Open="//"/>
					</MultiTokens>
					<SubRules>
						<Set Name="Russian symbols" Enabled="True" Style="" Symbols="ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ" Quantity="0">
							<Attributes Foreground="clGreen" Background="$80000005" ParentForeground="True" ParentBackground="True"/>
						</Set>
					</SubRules>
				</Range>
				<Range Name="Strings" Style="Strings">
					<Attributes Foreground="clFuchsia" Background="$80000005" ParentBackground="True"/>
					<Delimiters Value="!&quot;#$%&amp;'()*+,-./:;&lt;=&gt;?@[\]^`{|}~"/>
					<OpenToken StartLine="" PartOfTerm="Right"/>
					<CloseToken StartLine="" PartOfTerm="Right"/>
					<Properties CloseOnEol="True"/>
					<MultiTokens>
						<Tokens Open="'" Close="'"/>
					</MultiTokens>
					<SubRules>
						<KeyList Name="Symbols ''" Enabled="True" Style="" Words="''
">
							<Attributes Foreground="clFuchsia" Background="$80000005" ParentForeground="True" ParentBackground="True"/>
						</KeyList>
					</SubRules>
				</Range>
				<Range Name="Directives" Style="Directives">
					<Attributes Foreground="clGreen" Background="$80000005" ParentBackground="True" Style="B"/>
					<Delimiters Value="!&quot;#$%&amp;'()*+,-./:;&lt;=&gt;?@[\]^`{|}~"/>
					<OpenToken StartLine="" PartOfTerm="Right"/>
					<CloseToken StartLine="" PartOfTerm="Right"/>
					<Properties/>
					<MultiTokens>
						<Tokens Open="{$" Close="}"/>
					</MultiTokens>
					<SubRules/>
				</Range>
				<Range Name="Assembler" Style="Assembler">
					<Attributes Foreground="clBlack" Background="$00EEFFFF"/>
					<Delimiters Value="!&quot;#$%&amp;'()*+,-./:;&lt;=&gt;?@[\]^`{|}~"/>
					<OpenToken StartLine="" PartOfTerm="Right"/>
					<CloseToken StartLine="" PartOfTerm="False"/>
					<Properties/>
					<MultiTokens>
						<Tokens Open="asm" Close="end"/>
					</MultiTokens>
					<SubRules>
						<Range Name="Remarks" Style="Remarks">
							<Attributes Foreground="$00A00000" Background="$00EEFFFF" ParentBackground="True" Style="I"/>
							<Delimiters Value="!&quot;#$%&amp;'()*+,-./:;&lt;=&gt;?@[\]^`{|}~"/>
							<OpenToken StartLine="" PartOfTerm="Right"/>
							<CloseToken StartLine="" PartOfTerm="False"/>
							<Properties CloseOnEol="True"/>
							<MultiTokens>
								<Tokens Open="//"/>
							</MultiTokens>
							<SubRules/>
						</Range>
						<Range Name="Hex" Style="Hex">
							<Attributes Foreground="clMaroon" Background="$00EEFFFF" ParentBackground="True"/>
							<Delimiters Value="!&quot;#$%&amp;'()*+,-./:;&lt;=&gt;?@[\]^`{|}~"/>
							<OpenToken StartLine="" PartOfTerm="Right"/>
							<CloseToken StartLine="" PartOfTerm="False"/>
							<Properties CloseOnTerm="True"/>
							<MultiTokens>
								<Tokens Open="$"/>
							</MultiTokens>
							<SubRules/>
						</Range>
						<KeyList Name="Commands" Enabled="True" Style="" Words="aaa
aad
aam
adc
add
and
arpl
bound
bsf
bsr
bswap
bt
btc
btr
bts
call
cbw
cdq
clc
cld
cli
clts
cmc
cmp
cmps
cmpsb
cmpsd
cmpsw
cmpxchg
cwd
cwde
daa
das
dec
div
emms
enter
f2xm1
fabs
fadd
faddp
fbld
fbstp
fchs
fclex
fcmovb
fcmovbe
fcmove
fcmovnb
fcmovnbe
fcmovne
fcmovnu
fcmovu
fcom
fcomi
fcomip
fcomp
fcompp
fcos
fdecstp
fdiv
fdivp
fdivr
fdivrp
femms
ffree
fiadd
ficom
ficomp
fidiv
fidivr
fild
fimul
fincstp
finit
fist
fistp
fisub
fisubr
fld
fld1
fldcw
fldenv
fldl2e
fldl2t
fldlg2
fldln2
fldpi
fldz
fmul
fmulp
fnclex
fninit
fnop
fnsave
fnstcw
fnstenv
fnstsw
fpatan
fprem1
fptan
frndint
frstor
fsave
fscale
fsin
fsincos
fsqrt
fst
fstcw
fstenv
fstp
fstsw
fsub
fsubp
fsubr
fsubrp
ftst
fucom
fucomi
fucomip
fucomp
fucompp
fwait
fxch
fxtract
fyl2xp1
hlt
idiv
imul
in
inc
ins
insb
insd
insw
int
into
invd
invlpg
iret
iretd
iretw
ja
jae
jb
jbe
jc
jcxz
je
jecxz
jg
jge
jl
jle
jmp
jna
jnae
jnb
jnbe
jnc
jne
jng
jnge
jnl
jnle
jno
jnp
jns
jnz
jo
jp
jpe
jpo
js
jz
lahf
lar
lds
lea
leave
les
lfs
lgdt
lgs
lidt
lldt
lmsw
lock
lods
lodsb
lodsd
lodsw
loop
loope
loopne
loopnz
loopz
lsl
lss
ltr
mov
movd
movq
movs
movsb
movsd
movsw
movsx
movzx
mul
neg
nop
not
or
out
outs
outsb
outsd
outsw
packssdw
packsswb
packuswb
paddb
paddd
paddsb
paddsw
paddusb
paddusw
paddw
pand
pandn
pavgusb
pcmpeqb
pcmpeqd
pcmpeqw
pcmpgtb
pcmpgtd
pcmpgtw
pf2id
pfacc
pfadd
pfcmpeq
pfcmpge
pfcmpgt
pfmax
pfmin
pfmul
pfrcp
pfrcpit1
pfrcpit2
pfrsqit1
pfrsqrt
pfsub
pfsubr
pi2fd
pmaddwd
pmulhrw
pmulhw
pmullw
pop
popa
popad
popaw
popf
popfd
popfw
por
prefetch
prefetchw
pslld
psllq
psllw
psrad
psraw
psrld
psrlq
psrlw
psubb
psubd
psubsb
psubsw
psubusb
psubusw
psubw
punpckhbw
punpckhdq
punpckhwd
punpcklbw
punpckldq
punpcklwd
push
pusha
pushad
pushaw
pushf
pushfd
pushfw
pxor
rcl
rcr
rep
repe
repne
repnz
repz
ret
rol
ror
sahf
sal
sar
sbb
scas
scasb
scasd
scasw
seta
setae
setb
setbe
setc
sete
setg
setge
setl
setle
setna
setnae
setnb
setnbe
setnc
setne
setng
setnge
setnl
setnle
setno
setnp
setns
setnz
seto
setp
setpo
sets
setz
sgdt
shl
shld
shr
shrd
sidt
sldt
smsw
stc
std
sti
stos
stosb
stosd
stosw
str
sub
test
verr
verw
wait
wbinvd
xadd
xchg
xlat
xlatb
xor
">
							<Attributes Foreground="clNavy" Background="$00EEFFFF" ParentBackground="True" Style="B"/>
						</KeyList>
						<KeyList Name="Registers" Enabled="True" Style="" Words="EBX
EAX
ECX
ax
bx
ah
al
ax
bh
bl
bp
bx
ch
cl
cs
cx
dh
di
dl
ds
dx
eax
ebx
ecx
edi
edx
esi
es
ip
si
sp
">
							<Attributes Foreground="clNavy" Background="$00EEFFFF" ParentBackground="True" Style="B"/>
						</KeyList>
						<KeyList Name="end" Enabled="True" Style="" Words="end
">
							<Attributes Foreground="clBlack" Background="$00EEFFFF" ParentForeground="True" ParentBackground="True" Style="B"/>
						</KeyList>
					</SubRules>
				</Range>
				<Range Name="Char" CaseSensitive="True" Style="Char">
					<Attributes Foreground="clBlue" Background="$80000005" ParentBackground="True"/>
					<Delimiters Value="!&quot;#$%&amp;'()*+,-./:;&lt;=&gt;?@[\]^`{|}~"/>
					<OpenToken StartLine="" PartOfTerm="Right"/>
					<CloseToken StartLine="" PartOfTerm="False"/>
					<Properties CloseOnTerm="True" CloseOnEol="True"/>
					<MultiTokens>
						<Tokens Open="#" Close=" "/>
					</MultiTokens>
					<SubRules/>
				</Range>
				<Range Name="Address" Style="Address">
					<Attributes Foreground="clNavy" Background="$80000005" ParentBackground="True"/>
					<Delimiters Value="!&quot;#$%&amp;'()*+,-./:;&lt;=&gt;?@[\]^`{|}~"/>
					<OpenToken StartLine="" PartOfTerm="Right"/>
					<CloseToken StartLine="" PartOfTerm="False"/>
					<Properties CloseOnTerm="True"/>
					<MultiTokens>
						<Tokens Open="@"/>
					</MultiTokens>
					<SubRules/>
				</Range>
				<Range Name="Hex Numbers" Style="Hex Numbers">
					<Attributes Foreground="clMaroon" Background="$80000005" ParentBackground="True"/>
					<Delimiters Value="!&quot;#$%&amp;'()*+,-./:;&lt;=&gt;?@[\]^`{|}~"/>
					<OpenToken StartLine="" PartOfTerm="Right"/>
					<CloseToken StartLine="" PartOfTerm="False"/>
					<Properties CloseOnTerm="True"/>
					<MultiTokens>
						<Tokens Open="$"/>
					</MultiTokens>
					<SubRules/>
				</Range>
				<KeyList Name="Pascal Terms" Enabled="True" Style="" Words="procedure
begin
end
unit
interface
uses
then
type
of
object
const
private
while
in
function
protected
public
class
override
constructor
property
published
read
write
stored
default
implementation
var
for
to
do
Case
else
If
Do
And
As
In
Far
Cdecl
Is
on
Label
Mod
File
Or
Nil
To
Div
Near
For
Shl
Packed
package
Shr
Then
Not
Pascal
Raise
Index
Out
Goto
While
Xor
Safecall
With
Dispid
Try
Inline
Repeat
Dynamic
Message
Stdcall
Except
Until
Finally
Stored
Interface
deprecated
Abstract
Forward
Library
Program
Downto
overload
Inherited
Assembler
Absolute
contains
Published
Threadvar
Export
Nodefault
External
Automated
Register
platform
Virtual
Protected
requires
Exports
Implements
Dispinterface
Reintroduce
Finalization
Writeonly
Destructor
Constructor
Initialization
Implementation
Resourcestring
Stringresource
not
">
					<Attributes Foreground="clBlue" Background="$80000005" ParentBackground="True"/>
				</KeyList>
				<KeyList Name="Standard types" Enabled="True" Style="" Words="Boolean
PChar
Integer
array
LongInt
TComponent
Pointer
string
ByteBool
Char
Set
Record
integer
WordBool
LongBool
Integer
Cardinal
Shortint
Smallint
Int64
Byte
Word
Longword
AnsiChar
WideChar
Real48
Single
Double
Extended
Comp
Currency
ShortString
AnsiString
WideString
PWideChar
Variant
OleVariant
PAnsiString
PString
AnsiString
PByteArray
PCurrency
PDouble
PExtended
PSingle
Currency
PInteger
POleVariant
PShortString
PTextBuf
PVarRec
PVariant
PWideString
PWordArray
">
					<Attributes Foreground="clBlue" Background="$80000005" ParentBackground="True"/>
				</KeyList>
				<KeyList Name="Symbols" Enabled="True" Style="" Words="..
:
&lt;
&gt;
=
/
*
.
,
-
+
(
)
[
]
">
					<Attributes Foreground="clNavy" Background="$80000005" ParentBackground="True"/>
				</KeyList>
				<KeyList Name="Registry Constants" Enabled="True" Style="" Words="HKEY_LOCAL_MACHINE
HKEY_CURRENT_USER
">
					<Attributes Foreground="clPurple" Background="$80000005" ParentBackground="True" Style="B"/>
				</KeyList>
				<KeyList Name="Result" Enabled="True" Style="" Words="Result
">
					<Attributes Foreground="clNavy" Background="$80000005" ParentBackground="True" Style="B"/>
				</KeyList>
				<KeyList Name="Symbol ';'" Enabled="True" Style="" Words=";
">
					<Attributes Foreground="clNone" Background="$80000005" ParentForeground="True" ParentBackground="True"/>
				</KeyList>
				<KeyList Name="Word 'asm'" Enabled="True" Style="" Words="asm
">
					<Attributes Foreground="clNone" Background="$00EEFFFF" ParentForeground="True" Style="B"/>
				</KeyList>
				<Set Name="Numbers" Enabled="True" Style="" Symbols="0123456789" Quantity="0">
					<Attributes Foreground="clMaroon" Background="$80000005" ParentBackground="True"/>
				</Set>
				<Set Name="Float" Enabled="True" Style="" Symbols=".0123456789" Quantity="0">
					<Attributes Foreground="clMaroon" Background="$80000005" ParentBackground="True"/>
				</Set>
			</SubRules>
		</MainRules>
	</SyntaxColoring>
	<CodeFolding>
		<FoldRegion Name="begin" Type="1">
			<OpenToken Symbol="BEGIN"/>
			<CloseToken Symbol="END"/>
			<Properties AddEnding="True" WholeWords="True"/>
			<SubRegions/>
		</FoldRegion>
		<FoldRegion Name="record" Type="1">
			<OpenToken Symbol="RECORD"/>
			<CloseToken Symbol="END"/>
			<Properties WholeWords="True"/>
			<SubRegions/>
		</FoldRegion>
		<FoldRegion Name="class" Type="1">
			<OpenToken Symbol="CLASS" RegExpr="[^.*]" UseRegExpr="True"/>
			<CloseToken Symbol="END"/>
			<Properties WholeWords="True"/>
			<SubRegions/>
		</FoldRegion>
		<FoldRegion Name="try" Type="1">
			<OpenToken Symbol="TRY"/>
			<CloseToken Symbol="END"/>
			<Properties AddEnding="True" WholeWords="True"/>
			<SubRegions/>
		</FoldRegion>
	</CodeFolding>
	<CustomData>
		<Entry Name="CommentBlockStart" Value="/*"/>
		<Entry Name="CommentBlockMid" Value="# "/>
		<Entry Name="CommentBlockEnd" Value="*/"/>
		<Entry Name="FunctionDetect" Value="(function|procedure)\s+([a-z_]+[a-z_0-9\.\:]+)\s*?(\([^\)]*?\))?\s*?(\:\s*?[0-9a-z]+)?\s*?\;?\s*?(\/\/|\{)?(\sbegin|\svar|\sconst|\stype)"/>
		<Entry Name="CommentLine" Value="//"/>
	</CustomData>
</SynUniHighlighter>